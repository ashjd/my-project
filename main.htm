<!Doctype html>
<html>

<head>

	<title>PlaceBook</title>

	<style type="text/css">

		.fixed-nav-bar {
		  position: fixed;
		  top: 0;
		  left: 0;
		  right: 0;
		  z-index: 9999;
		  width: 100%;
		  height: 70px;
		  background-color: #669999;
		}

		.menu {
		  width: 90%;
		  max-width: 960px;
		  margin: 0 auto;
		}

		.sitename {
		 
		  margin-right: 10px;
		  margin-left: 5px;
		  margin-top: 20px;
		  color: #ffffff;
		  font-size: 50px;
		  font-family: "Georgia";
		  font-weight: bold;
		  letter-spacing: 2px;
		}

		.caption {
			margin-left: 20px;
			font-size: 20px;
			color: #e5f7ff ;
		}

		.search-input {
		  border: 1px solid transparent;
		  border-radius: 2px 0 0 2px;
		  margin-left: 40px;
		  width: 200px;
		  height: 32px;
		  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
		  margin-bottom: 10px;
		}

		#map {
			margin-top: 10px;
			margin-left: 10px;
			height: 500px;
			width: 48%;
			border: 2px solid #BDBCBD;
			float: left;
		}

		#tabs {
			margin-top: 10px;
			margin-right: 10px;
			margin-left: 50%;
			height: 500px;
			border: 2px solid #BDBCBD;
		}

		.container {
			margin-top: 80px;
			float:left;
			position:relative;
			width:98%;
			height: 525px;
			border: 2px solid #333300;
		}

		.tabs-nav {
		  display: flex;
		  list-style: none;
		  margin: 0;
		  padding: 0;
		}

		.tabs-nav__link {
		  flex: 1;
		  margin-right: 4px;
		  padding: 12px;
		  color: #fff;
		  background-color: #85adad;
		  text-align: center;
		  transition: color 0.3s;
		}

		.tabs-nav__link:last-child {
		  margin-right: 0;
		}

		.tabs-nav__link:hover {
		  color: #6d6d6d;
		}

		.tabs-nav__link.is-active {
		  color: #dc446e;
		  background-color: #e7e7e7;
		}

		.tabs-nav__link i,
		.tabs-nav__link span {
		  margin: 0;
		  padding: 0;
		  line-height: 1;
		}

		.tabs-nav__link i {
		  font-size: 18px;
		}

		.tabs-nav__link span {
		  display: none;
		  font-size: 18px;
		}

		@media all and (min-width: 720px) {
		  .tabs-nav__link i {
		    margin-bottom: 12px;
		    font-size: 22px;
		  }
		  .tabs-nav__link span {
		    display: block;
		  }
		}

		.tab {
		  display: none;
		  background-color: #e7e7e7;
		}

		.tab.is-active {
		  display: block;
		}

	</style>

</head>

<body>

	<nav class="fixed-nav-bar">
	  <div id="menu" class="menu">
	  		<label class = "sitename"> PlaceBook </label>
	  		<input id="place-input" class='search-input' type="text" placeholder="Search for a place to visit">
	  		<label class = "caption"> Know EVERYTHING about any place </label>
	  </div>
	</nav>

	<div id = "container" class = "container">
		
		<div id="map" class = "map"> 
		</div>
		
		<div id = "tabs" class = "tabs">
			<div class = "tabs-nav">
				<a href="#" class="tabs-nav__link is-active">
		            <i class="fa fa-home"></i>
		            <span> Places to visit </span>
		          </a>
		          <a href="#" class="tabs-nav__link">
		            <i class="fa fa-book"></i>
		            <span> Hotels </span>
		          </a>
		          <a href="#" class="tabs-nav__link">
		            <i class="fa fa-heart"></i>
		            <span> Restaurants </span>
		          </a>
		          <a href="#" class="tabs-nav__link">
		            <i class="fa fa-calendar"></i>
		            <span> Weather </span>
		          </a>
		          <a href="#" class="tabs-nav__link">
		            <i class="fa fa-cog"></i>
		            <span> In-news </span>
		          </a>
			</div>

			<div class="tab is-active">
	          <div class="tab__content">
	            <h2>Places to Visit </h2>
	            <p> These are some great places to visit here !</p>  
	          </div>
	        </div>

	        <div class="tab is-active">
	          <div class="tab__content">
	            <h2> Hotels </h2>
	            <p> These are some great hotels to stay here !</p>  
	          </div>
	        </div>

	        <div class="tab is-active">
	          <div class="tab__content">
	            <h2> Restaurants </h2>
	            <p> These are some great restaurants here !</p>  
	          </div>
	        </div>

	        <div class="tab is-active">
	          <div class="tab__content">
	            <h2> Weather </h2>
	            <p> This is the weather forecast </p>  
	          </div>
	        </div>

	        <div class="tab is-active">
	          <div class="tab__content">
	            <h2> In-News </h2>
	            <p> These are some important news here !</p>  
	          </div>
	        </div>

		</div>

	</div>

	<script type="text/javascript">

	function initAutocomplete() {
		  var map = new google.maps.Map(document.getElementById('map'), {
		    center: {lat: -33.8688, lng: 151.2195},
		    zoom: 13,
		    mapTypeId: google.maps.MapTypeId.ROADMAP
		  });

		  // Create the search box and link it to the UI element.
		  var input = document.getElementById('place-input');
		  var searchBox = new google.maps.places.SearchBox(input);

		  // Bias the SearchBox results towards current map's viewport.
		  map.addListener('bounds_changed', function() {
		    searchBox.setBounds(map.getBounds());
		  });

		  var markers = [];
		  // [START region_getplaces]
		  // Listen for the event fired when the user selects a prediction and retrieve
		  // more details for that place.
		  searchBox.addListener('places_changed', function() {
		    var places = searchBox.getPlaces();

		    if (places.length == 0) {
		      return;
		    }

		    // Clear out the old markers.
		    markers.forEach(function(marker) {
		      marker.setMap(null);
		    });
		    markers = [];

		    // For each place, get the icon, name and location.
		    var bounds = new google.maps.LatLngBounds();
		    places.forEach(function(place) {
		      var icon = {
		        url: place.icon,
		        size: new google.maps.Size(71, 71),
		        origin: new google.maps.Point(0, 0),
		        anchor: new google.maps.Point(17, 34),
		        scaledSize: new google.maps.Size(25, 25)
		      };

		      // Create a marker for each place.
		      markers.push(new google.maps.Marker({
		        map: map,
		        icon: icon,
		        title: place.name,
		        position: place.geometry.location
		      }));

		      if (place.geometry.viewport) {
		        // Only geocodes have viewport.
		        bounds.union(place.geometry.viewport);
		      } else {
		        bounds.extend(place.geometry.location);
		      }
		    });
		    map.fitBounds(bounds);
		  });
		  // [END region_getplaces]
		}

	</script>
	
	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBv2yuC05yWmnEBk8o_8g8mZevfcMW09PE&libraries=places&callback=initAutocomplete"
         async defer> </script>
</body>

</html>